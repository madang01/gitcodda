/*
 * This file is generated by jOOQ.
*/
package kr.pe.codda.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import kr.pe.codda.jooq.Indexes;
import kr.pe.codda.jooq.Keys;
import kr.pe.codda.jooq.SbDb;
import kr.pe.codda.jooq.tables.records.SbBoardHistoryTbRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SbBoardHistoryTb extends TableImpl<SbBoardHistoryTbRecord> {

    private static final long serialVersionUID = -347265862;

    /**
     * The reference instance of <code>sb_db.sb_board_history_tb</code>
     */
    public static final SbBoardHistoryTb SB_BOARD_HISTORY_TB = new SbBoardHistoryTb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SbBoardHistoryTbRecord> getRecordType() {
        return SbBoardHistoryTbRecord.class;
    }

    /**
     * The column <code>sb_db.sb_board_history_tb.board_id</code>.
     */
    public final TableField<SbBoardHistoryTbRecord, UByte> BOARD_ID = createField("board_id", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sb_db.sb_board_history_tb.board_no</code>.
     */
    public final TableField<SbBoardHistoryTbRecord, UInteger> BOARD_NO = createField("board_no", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sb_db.sb_board_history_tb.history_sq</code>. 히스토리 순서
     */
    public final TableField<SbBoardHistoryTbRecord, UByte> HISTORY_SQ = createField("history_sq", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "히스토리 순서");

    /**
     * The column <code>sb_db.sb_board_history_tb.subject</code>.
     */
    public final TableField<SbBoardHistoryTbRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>sb_db.sb_board_history_tb.contents</code>.
     */
    public final TableField<SbBoardHistoryTbRecord, String> CONTENTS = createField("contents", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>sb_db.sb_board_history_tb.registrant_id</code>. 작성자
     */
    public final TableField<SbBoardHistoryTbRecord, String> REGISTRANT_ID = createField("registrant_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "작성자");

    /**
     * The column <code>sb_db.sb_board_history_tb.ip</code>.
     */
    public final TableField<SbBoardHistoryTbRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>sb_db.sb_board_history_tb.reg_dt</code>. 최초 작성일
     */
    public final TableField<SbBoardHistoryTbRecord, Timestamp> REG_DT = createField("reg_dt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "최초 작성일");

    /**
     * Create a <code>sb_db.sb_board_history_tb</code> table reference
     */
    public SbBoardHistoryTb() {
        this(DSL.name("sb_board_history_tb"), null);
    }

    /**
     * Create an aliased <code>sb_db.sb_board_history_tb</code> table reference
     */
    public SbBoardHistoryTb(String alias) {
        this(DSL.name(alias), SB_BOARD_HISTORY_TB);
    }

    /**
     * Create an aliased <code>sb_db.sb_board_history_tb</code> table reference
     */
    public SbBoardHistoryTb(Name alias) {
        this(alias, SB_BOARD_HISTORY_TB);
    }

    private SbBoardHistoryTb(Name alias, Table<SbBoardHistoryTbRecord> aliased) {
        this(alias, aliased, null);
    }

    private SbBoardHistoryTb(Name alias, Table<SbBoardHistoryTbRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SbDb.SB_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SB_BOARD_HISTORY_TB_PRIMARY, Indexes.SB_BOARD_HISTORY_TB_SB_BOARD_HISTORY_FK2_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SbBoardHistoryTbRecord> getPrimaryKey() {
        return Keys.KEY_SB_BOARD_HISTORY_TB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SbBoardHistoryTbRecord>> getKeys() {
        return Arrays.<UniqueKey<SbBoardHistoryTbRecord>>asList(Keys.KEY_SB_BOARD_HISTORY_TB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SbBoardHistoryTbRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SbBoardHistoryTbRecord, ?>>asList(Keys.SB_BOARD_HISTORY_FK1, Keys.SB_BOARD_HISTORY_FK2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardHistoryTb as(String alias) {
        return new SbBoardHistoryTb(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbBoardHistoryTb as(Name alias) {
        return new SbBoardHistoryTb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SbBoardHistoryTb rename(String name) {
        return new SbBoardHistoryTb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SbBoardHistoryTb rename(Name name) {
        return new SbBoardHistoryTb(name, null);
    }
}
