/*
 * This file is generated by jOOQ.
*/
package kr.pe.codda.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import kr.pe.codda.jooq.Indexes;
import kr.pe.codda.jooq.Keys;
import kr.pe.codda.jooq.SbDb;
import kr.pe.codda.jooq.tables.records.SbUploadImageTbRecord;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SbUploadImageTb extends TableImpl<SbUploadImageTbRecord> {

    private static final long serialVersionUID = 887118634;

    /**
     * The reference instance of <code>sb_db.sb_upload_image_tb</code>
     */
    public static final SbUploadImageTb SB_UPLOAD_IMAGE_TB = new SbUploadImageTb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SbUploadImageTbRecord> getRecordType() {
        return SbUploadImageTbRecord.class;
    }

    /**
     * The column <code>sb_db.sb_upload_image_tb.yyyymmdd</code>.
     */
    public final TableField<SbUploadImageTbRecord, String> YYYYMMDD = createField("yyyymmdd", org.jooq.impl.SQLDataType.CHAR(8).nullable(false), this, "");

    /**
     * The column <code>sb_db.sb_upload_image_tb.day_sq</code>.
     */
    public final TableField<SbUploadImageTbRecord, UInteger> DAY_SQ = createField("day_sq", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sb_db.sb_upload_image_tb.fname</code>.
     */
    public final TableField<SbUploadImageTbRecord, String> FNAME = createField("fname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>sb_db.sb_upload_image_tb.fsize</code>.
     */
    public final TableField<SbUploadImageTbRecord, Long> FSIZE = createField("fsize", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>sb_db.sb_upload_image_tb</code> table reference
     */
    public SbUploadImageTb() {
        this(DSL.name("sb_upload_image_tb"), null);
    }

    /**
     * Create an aliased <code>sb_db.sb_upload_image_tb</code> table reference
     */
    public SbUploadImageTb(String alias) {
        this(DSL.name(alias), SB_UPLOAD_IMAGE_TB);
    }

    /**
     * Create an aliased <code>sb_db.sb_upload_image_tb</code> table reference
     */
    public SbUploadImageTb(Name alias) {
        this(alias, SB_UPLOAD_IMAGE_TB);
    }

    private SbUploadImageTb(Name alias, Table<SbUploadImageTbRecord> aliased) {
        this(alias, aliased, null);
    }

    private SbUploadImageTb(Name alias, Table<SbUploadImageTbRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SbDb.SB_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SB_UPLOAD_IMAGE_TB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SbUploadImageTbRecord> getPrimaryKey() {
        return Keys.KEY_SB_UPLOAD_IMAGE_TB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SbUploadImageTbRecord>> getKeys() {
        return Arrays.<UniqueKey<SbUploadImageTbRecord>>asList(Keys.KEY_SB_UPLOAD_IMAGE_TB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbUploadImageTb as(String alias) {
        return new SbUploadImageTb(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbUploadImageTb as(Name alias) {
        return new SbUploadImageTb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SbUploadImageTb rename(String name) {
        return new SbUploadImageTb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SbUploadImageTb rename(Name name) {
        return new SbUploadImageTb(name, null);
    }
}
