/*
 * This file is generated by jOOQ.
*/
package kr.pe.codda.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import kr.pe.codda.jooq.Indexes;
import kr.pe.codda.jooq.Keys;
import kr.pe.codda.jooq.SbDb;
import kr.pe.codda.jooq.tables.records.SbSeqTbRecord;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SbSeqTb extends TableImpl<SbSeqTbRecord> {

    private static final long serialVersionUID = 227312809;

    /**
     * The reference instance of <code>sb_db.sb_seq_tb</code>
     */
    public static final SbSeqTb SB_SEQ_TB = new SbSeqTb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SbSeqTbRecord> getRecordType() {
        return SbSeqTbRecord.class;
    }

    /**
     * The column <code>sb_db.sb_seq_tb.sq_id</code>. 시퀀스 식별자, 0:메뉴, 1:공지게시판 시퀀스, 2:자유게시판시퀀스, 3:FAQ시퀀스
     */
    public final TableField<SbSeqTbRecord, UByte> SQ_ID = createField("sq_id", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "시퀀스 식별자, 0:메뉴, 1:공지게시판 시퀀스, 2:자유게시판시퀀스, 3:FAQ시퀀스");

    /**
     * The column <code>sb_db.sb_seq_tb.sq_value</code>. 시퀀스 값, 1 부터 시작
     */
    public final TableField<SbSeqTbRecord, UInteger> SQ_VALUE = createField("sq_value", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "시퀀스 값, 1 부터 시작");

    /**
     * The column <code>sb_db.sb_seq_tb.sq_name</code>. 시퀀스 이름
     */
    public final TableField<SbSeqTbRecord, String> SQ_NAME = createField("sq_name", org.jooq.impl.SQLDataType.VARCHAR(45), this, "시퀀스 이름");

    /**
     * Create a <code>sb_db.sb_seq_tb</code> table reference
     */
    public SbSeqTb() {
        this(DSL.name("sb_seq_tb"), null);
    }

    /**
     * Create an aliased <code>sb_db.sb_seq_tb</code> table reference
     */
    public SbSeqTb(String alias) {
        this(DSL.name(alias), SB_SEQ_TB);
    }

    /**
     * Create an aliased <code>sb_db.sb_seq_tb</code> table reference
     */
    public SbSeqTb(Name alias) {
        this(alias, SB_SEQ_TB);
    }

    private SbSeqTb(Name alias, Table<SbSeqTbRecord> aliased) {
        this(alias, aliased, null);
    }

    private SbSeqTb(Name alias, Table<SbSeqTbRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SbDb.SB_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SB_SEQ_TB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SbSeqTbRecord> getPrimaryKey() {
        return Keys.KEY_SB_SEQ_TB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SbSeqTbRecord>> getKeys() {
        return Arrays.<UniqueKey<SbSeqTbRecord>>asList(Keys.KEY_SB_SEQ_TB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbSeqTb as(String alias) {
        return new SbSeqTb(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbSeqTb as(Name alias) {
        return new SbSeqTb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SbSeqTb rename(String name) {
        return new SbSeqTb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SbSeqTb rename(Name name) {
        return new SbSeqTb(name, null);
    }
}
