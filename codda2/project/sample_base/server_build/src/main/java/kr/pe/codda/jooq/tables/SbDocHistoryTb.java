/*
 * This file is generated by jOOQ.
*/
package kr.pe.codda.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import kr.pe.codda.jooq.Indexes;
import kr.pe.codda.jooq.Keys;
import kr.pe.codda.jooq.SbDb;
import kr.pe.codda.jooq.tables.records.SbDocHistoryTbRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SbDocHistoryTb extends TableImpl<SbDocHistoryTbRecord> {

    private static final long serialVersionUID = -475653373;

    /**
     * The reference instance of <code>sb_db.sb_doc_history_tb</code>
     */
    public static final SbDocHistoryTb SB_DOC_HISTORY_TB = new SbDocHistoryTb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SbDocHistoryTbRecord> getRecordType() {
        return SbDocHistoryTbRecord.class;
    }

    /**
     * The column <code>sb_db.sb_doc_history_tb.doc_no</code>. 문서 번호
     */
    public final TableField<SbDocHistoryTbRecord, UInteger> DOC_NO = createField("doc_no", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "문서 번호");

    /**
     * The column <code>sb_db.sb_doc_history_tb.doc_sq</code>. 문서 시퀀스 번호
     */
    public final TableField<SbDocHistoryTbRecord, UInteger> DOC_SQ = createField("doc_sq", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "문서 시퀀스 번호");

    /**
     * The column <code>sb_db.sb_doc_history_tb.file_name</code>. 문서 파일 이름
     */
    public final TableField<SbDocHistoryTbRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.VARCHAR(45), this, "문서 파일 이름");

    /**
     * The column <code>sb_db.sb_doc_history_tb.subject</code>.
     */
    public final TableField<SbDocHistoryTbRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>sb_db.sb_doc_history_tb.contents</code>. 문서 내용
     */
    public final TableField<SbDocHistoryTbRecord, String> CONTENTS = createField("contents", org.jooq.impl.SQLDataType.CLOB, this, "문서 내용");

    /**
     * The column <code>sb_db.sb_doc_history_tb.reg_dt</code>. 최초 작성일
     */
    public final TableField<SbDocHistoryTbRecord, Timestamp> REG_DT = createField("reg_dt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "최초 작성일");

    /**
     * Create a <code>sb_db.sb_doc_history_tb</code> table reference
     */
    public SbDocHistoryTb() {
        this(DSL.name("sb_doc_history_tb"), null);
    }

    /**
     * Create an aliased <code>sb_db.sb_doc_history_tb</code> table reference
     */
    public SbDocHistoryTb(String alias) {
        this(DSL.name(alias), SB_DOC_HISTORY_TB);
    }

    /**
     * Create an aliased <code>sb_db.sb_doc_history_tb</code> table reference
     */
    public SbDocHistoryTb(Name alias) {
        this(alias, SB_DOC_HISTORY_TB);
    }

    private SbDocHistoryTb(Name alias, Table<SbDocHistoryTbRecord> aliased) {
        this(alias, aliased, null);
    }

    private SbDocHistoryTb(Name alias, Table<SbDocHistoryTbRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SbDb.SB_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SB_DOC_HISTORY_TB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SbDocHistoryTbRecord> getPrimaryKey() {
        return Keys.KEY_SB_DOC_HISTORY_TB_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SbDocHistoryTbRecord>> getKeys() {
        return Arrays.<UniqueKey<SbDocHistoryTbRecord>>asList(Keys.KEY_SB_DOC_HISTORY_TB_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SbDocHistoryTbRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SbDocHistoryTbRecord, ?>>asList(Keys.SB_DOC_HISTORY_FK1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbDocHistoryTb as(String alias) {
        return new SbDocHistoryTb(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SbDocHistoryTb as(Name alias) {
        return new SbDocHistoryTb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SbDocHistoryTb rename(String name) {
        return new SbDocHistoryTb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SbDocHistoryTb rename(Name name) {
        return new SbDocHistoryTb(name, null);
    }
}
