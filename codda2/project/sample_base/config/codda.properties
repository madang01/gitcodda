# project[sample_base]'s config file
# Sat May 04 23:31:33 KST 2019
jdf.member_login_page.desc=DB 를 이용한 로그인 화면(/sitemenu/member/UserLoginInput.jsp) 과 하드 코딩된 로그인 정보를 이용하는 로그인 화면(/sitemenu/member/UserHardCodingLoginInput.jsp) 이 있다
jdf.member_login_page.value=/sitemenu/member/MemberLoginInput.jsp
jdf.admin_login_page.value=/sitemenu/member/AdminLoginInput.jsp
jdf.session_key_redirect_page.value=/sessionKeyRedirect.jsp
jdf.error_message_page.value=/errorMessagePage.jsp
jdf.servlet_trace.value=true
sessionkey.rsa.keypair_source.desc=세션키에 사용되는 공개키 키쌍 생성 방법, API:내부적으로 RSA 키쌍 생성, File:외부 파일를 읽어와서 RSA  키쌍을 생성, default value[SERVER], the rsa keypair source of sessionkey set[SERVER, FILE]
sessionkey.rsa.keypair_source.value=SERVER
sessionkey.rsa.publickey.file.desc=세션키에 사용되는 RSA 공개키 파일, default value[[sinnnori installed path]/project/[main project name]/resouces/rsa_keypair/codda.publickey]
sessionkey.rsa.publickey.file.value=/home/madang01/gitmadang/codda/project/sample_base/resources/rsa_keypair/codda.publickey
sessionkey.rsa.privatekey.file.desc=세션키에 사용되는 RSA 개인키 파일, default value[<sinnnori installed path>/project/<main project name>/resouces/rsa_keypair/codda.privatekey]
sessionkey.rsa.privatekey.file.value=/home/madang01/gitmadang/codda/project/sample_base/resources/rsa_keypair/codda.privatekey
sessionkey.rsa.keysize.desc=세션키에 사용하는 공개키 크기, 단위 byte, default value[1024], the integer set[2048, 512, 1024]
sessionkey.rsa.keysize.value=1024
sessionkey.symmetric_key.algorithm.desc=세션키에 사용되는 대칭키 알고리즘, default value[AES], the string set[DES, DESede, AES]
sessionkey.symmetric_key.algorithm.value=AES
sessionkey.symmetric_key.size.desc=세션키에 사용되는 대칭키 크기, default value[16], the integer set[24, 16, 8]
sessionkey.symmetric_key.size.value=16
sessionkey.iv_size.desc=세션키에 사용되는 대칭키와 같이 사용되는 IV 크기, default value[16], the integer set[24, 16, 8]
sessionkey.iv_size.value=16
common.updownfile.local_source_file_resource_cnt.desc=로컬 원본 파일 자원 갯수, default value[10], min[1], max[2147483647]
common.updownfile.local_source_file_resource_cnt.value=10
common.updownfile.local_target_file_resource_cnt.desc=로컬 목적지 파일 자원 갯수, default value[10], min[1], max[2147483647]
common.updownfile.local_target_file_resource_cnt.value=10
common.updownfile.file_block_max_size.desc=파일 송수신 파일 블락 최대 크기, 1024 배수, 단위 byte, default value[1048576]
common.updownfile.file_block_max_size.value=1048576
common.cached_object.max_size.desc=싱글턴 객체 캐쉬 관리자에서 캐쉬로 관리할 객체의 최대 갯수. 주로 캐쉬되는 대상 객체는 xxxServerCodec, xxxClientCodec 이다, default value[100], min[1], max[2147483647]
common.cached_object.max_size.value=10000
dbcp.name_list.value=sb_db,gt_sb_db,lt_sb_db
dbcp.sb_db.dbcp_confige_file.value=D:\\gitcodda\\codda2\\project\\sample_base\\resources\\dbcp\\dbcp.lt_sb_db.properties
dbcp.gt_sb_db.dbcp_confige_file.value=D:\\gitcodda\\codda2\\project\\sample_base\\resources\\dbcp\\dbcp.gt_sb_db.properties
dbcp.lt_sb_db.dbcp_confige_file.value=D:\\gitcodda\\codda2\\project\\sample_base\\resources\\dbcp\\dbcp.lt_sb_db.properties
mainproject.common.host.desc=클라이언트에서 접속할 서버 주소, default value[localhost]
#mainproject.common.host.value=172.30.1.15
mainproject.common.host.value=localhost
mainproject.common.port.desc=포트 번호, default value[9090], min[1024], max[2147483647]
mainproject.common.port.value=9090
mainproject.common.byteorder.desc=바이트 오더, LITTLE_ENDIAN:리틀 엔디안, BIG_ENDIAN:빅 엔디안, default value[LITTLE_ENDIAN], the byteorder set[BIG_ENDIAN, LITTLE_ENDIAN]
mainproject.common.byteorder.value=LITTLE_ENDIAN
mainproject.common.charset.desc=문자셋, default value[UTF-8]
mainproject.common.charset.value=UTF-8
mainproject.common.message_protocol_type.desc=메시지 프로토콜, DHB:교차 md5 헤더+바디, DJSON:길이+존슨문자열, THB:길이+바디, default value[DHB], the message protocol set[DJSON, DHB, THB]
mainproject.common.message_protocol_type.value=DHB
mainproject.client.monitor.time_interval.desc=모니터링 주기, 단위 ms, default value[5000], min[1000], max[2147483647]
mainproject.client.monitor.time_interval.value=50000
mainproject.client.data_packet_buffer.isdirect.desc=whether or not this byte buffer is direct, default value[true], the boolean set[false, true]
mainproject.client.data_packet_buffer.isdirect.value=true
mainproject.client.data_packet_buffer.max_cnt_per_message.desc=1개 메시지당 할당 받을 수 있는 데이터 패킷 버퍼 최대수, default value[1000], min[1], max[2147483647]
mainproject.client.data_packet_buffer.max_cnt_per_message.value=100
mainproject.client.data_packet_buffer.size.desc=데이터 패킷 버퍼 크기, 단위 byte, default value[4096], min[1024], max[2147483647]
mainproject.client.data_packet_buffer.size.value=2048
mainproject.client.data_packet_buffer.pool_size.desc=데이터 패킷 버퍼 큐 크기, default value[1000], min[1], max[2147483647]
mainproject.client.data_packet_buffer.pool_size.value=10000
mainproject.client.connection.type.desc=소캣 랩퍼 클래스인 연결 종류, ASYN:비동기, SYNC:동기, default value[ASYN], the connection type set[ASYN, SYNC]
mainproject.client.connection.type.value=ASYN
mainproject.client.socket.timeout.desc=소켓 타임아웃, 단위 ms, default value[5000], min[1000], max[2147483647]
mainproject.client.socket.timeout.value=5000
mainproject.client.connection.max_count.desc=최대 연결 갯수, default value[5], min[1], max[2147483647]
mainproject.client.connection.max_count.value=30000
mainproject.client.connection.count.desc=연결 갯수, default value[1], min[1], max[2147483647]
mainproject.client.connection.count.value=100
mainproject.client.connection.pool.supportor.time_interval.desc=연결 지원자 수행 주기, 최소 1000, 최대 Long.MAX_VALUE
mainproject.client.connection.pool.supportor.time_interval.value=600000
mainproject.client.asyn.selector.wakeup_interval.desc=클라이언트 selector 를 깨우는 주기. 단위 ms, default value[10], min[1], max[2147483647]
mainproject.client.asyn.selector.wakeup_interval.value=2
mainproject.client.asyn.public.private_mailbox_cnt_per_connection.desc=비동기+공유 연결 클래스(ShareAsynConnection)의 메일함 갯수, default value[2], min[1], max[2147483647]
mainproject.client.asyn.sync_message_mailbox_count_per_asyn_noshare_connection.value=10
mainproject.client.asyn.input_message_queue_size.desc=클라이언트 비동기 입출력 지원용 입력 메시지 큐 크기, default value[10], min[1], max[2147483647]
mainproject.client.asyn.input_message_queue_size.value=10
mainproject.client.asyn.output_message_queue_size.desc=출력 메시지 큐 크기, default value[10], min[1], max[2147483647]
mainproject.client.asyn.output_message_queue_size.value=10
mainproject.client.asyn.executor.pool_size.desc=비동기 출력 메시지 처리자 쓰레드 갯수, default value[1], min[1], max[2147483647]
mainproject.client.asyn.executor.pool_size.value=1
mainproject.server.monitor.time_interval.desc=모니터링 주기, 단위 ms, default value[5000], min[1000], max[2147483647]
mainproject.server.monitor.time_interval.value=5000
mainproject.server.data_packet_buffer.isdirect.desc=whether or not this byte buffer is direct, default value[true], the boolean set[false, true]
mainproject.server.data_packet_buffer.isdirect.value=true
mainproject.server.data_packet_buffer.max_cnt_per_message.desc=1개 메시지당 할당 받을 수 있는 데이터 패킷 버퍼 최대수, default value[1000], min[1], max[2147483647]
mainproject.server.data_packet_buffer.max_cnt_per_message.value=100
mainproject.server.data_packet_buffer.size.desc=데이터 패킷 버퍼 크기, 단위 byte, default value[4096], min[1024], max[2147483647]
mainproject.server.data_packet_buffer.size.value=2048
mainproject.server.data_packet_buffer.pool_size.desc=데이터 패킷 버퍼 큐 크기, default value[1000], min[1], max[2147483647]
mainproject.server.data_packet_buffer.pool_size.value=10000
mainproject.server.max_clients.desc=서버로 접속할 수 있는 최대 클라이언트 수, default value[5], min[1], max[2147483647]
mainproject.server.max_clients.value=60000
mainproject.server.pool.input_message_queue_size.desc=입력 메시지 큐 크기, default value[10], min[10], max[2147483647]
mainproject.server.pool.input_message_queue_size.value=10
mainproject.server.pool.output_message_queue_size.desc=출력 메시지 큐 크기, default value[10], min[10], max[2147483647]
mainproject.server.pool.output_message_queue_size.value=10
subproject.name_list.value=
