# project[sample_test]'s config file
# Sun Jul 26 05:58:36 KST 2020
sessionkey.rsa.keypair_source.desc=세션키에 사용되는 공개키 키쌍 생성 방법, SERVER:내부적으로 RSA 키쌍 생성, File:외부 파일를 읽어와서 RSA  키쌍을 생성, 디폴트:SERVER
sessionkey.rsa.keypair_source.value=SERVER
sessionkey.rsa.keypair_source.item_view_type=set
sessionkey.rsa.keypair_source.set=SERVER, FILE
sessionkey.rsa.publickey.file.desc=세션키에 사용되는 RSA 공개키 파일, '세션키에 사용되는 공개키 키쌍 생성 방법'이 FILE 인 경우에 유효하다
sessionkey.rsa.publickey.file.value=
sessionkey.rsa.publickey.file.item_view_type=file
sessionkey.rsa.publickey.file.file=resources/rsa_keypair/codda.publickey
sessionkey.rsa.privatekey.file.desc=세션키에 사용되는 RSA 개인 파일, '세션키에 사용되는 공개키 키쌍 생성 방법'이 FILE 인 경우에 유효하다
sessionkey.rsa.privatekey.file.value=
sessionkey.rsa.privatekey.file.item_view_type=file
sessionkey.rsa.privatekey.file.file=resources/rsa_keypair/codda.privatekey
sessionkey.rsa.keysize.desc=세션키에 사용하는 공개키 크기, 단위 byte, default value[1024], the integer set[2048, 512, 1024]
sessionkey.rsa.keysize.value=1024
sessionkey.rsa.keysize.item_view_type=set
sessionkey.rsa.keysize.set=2048, 512, 1024
sessionkey.symmetric_key.algorithm.desc=세션키에 사용되는 대칭키 알고리즘, default value[AES], the string set[DES, DESede, AES]
sessionkey.symmetric_key.algorithm.value=AES
sessionkey.symmetric_key.algorithm.item_view_type=set
sessionkey.symmetric_key.algorithm.set=DES, DESede, AES
sessionkey.symmetric_key.size.desc=세션키에 사용되는 대칭키 크기, default value[16], the integer set[24, 16, 8]
sessionkey.symmetric_key.size.value=16
sessionkey.symmetric_key.size.item_view_type=set
sessionkey.symmetric_key.size.set=24, 16, 8
sessionkey.iv_size.desc=세션키에 사용되는 대칭키와 쌍을 이루어 함께 사용되는 IV 크기, default value[16], the integer set[24, 16, 8]
sessionkey.iv_size.value=16
sessionkey.iv_size.set=24, 16, 8
dbcp.sub_part_name_list.value=
dbcp.sub_part_name_list.item_view_type=list
mainproject.common.host.desc=클라이언트에서 접속할 서버 주소, default value[localhost]
mainproject.common.host.value=localhost
mainproject.common.port.desc=포트 번호, default value[9090], min[1024], max[2147483647]
mainproject.common.port.value=9090
mainproject.common.byteorder.desc=바이트 오더, default value[LITTLE_ENDIAN], the byteorder set[BIG_ENDIAN, LITTLE_ENDIAN]
mainproject.common.byteorder.value=LITTLE_ENDIAN
mainproject.common.byteorder.set=BIG_ENDIAN, LITTLE_ENDIAN
mainproject.common.charset.desc=문자셋, default value[UTF-8]
mainproject.common.charset.value=UTF-8
mainproject.common.message_protocol_type.desc=메시지 프로토콜, DHB:교차 md5 헤더+바디, DJSON:길이+존슨문자열, THB:길이+바디, default value[DHB], the message protocol set[DJSON, DHB, THB]
mainproject.common.message_protocol_type.value=DHB
mainproject.common.message_protocol_type.set=DJSON, DHB, THB
mainproject.client.monitor.time_interval.desc=클라이언트 모니터링 주기, 단위 ms, default value[5000], min[1000], max[2147483647]
mainproject.client.monitor.time_interval.value=5000
mainproject.client.wrap_buffer.isdirect.desc=whether client wrap buffer is direct, default value[true], the boolean set[false, true]
mainproject.client.wrap_buffer.isdirect.value=true
mainproject.client.wrap_buffer.isdirect.item_view_type=set
mainproject.client.wrap_buffer.isdirect.set=false, true
mainproject.client.wrap_buffer.max_cnt_per_message.desc=클라이언트에서 1개 메시지당 할당 받을 수 있는 랩 버퍼 최대 갯수, default value[1000], min[1], max[2147483647]
mainproject.client.wrap_buffer.max_cnt_per_message.value=1000
mainproject.client.wrap_buffer.size.desc=클라이언트 랩 버퍼 크기, 단위 byte, default value[4096], min[1024], max[2147483647]
mainproject.client.wrap_buffer.size.value=4096
mainproject.client.wrap_buffer.pool_size.desc=클라이언트 랩 버퍼 폴 크기, default value[1000], min[1], max[2147483647]
mainproject.client.wrap_buffer.pool_size.value=1000
mainproject.client.connection.type.desc=클라이언트 연결 종류, ASYN:비동기, SYNC:동기, default value[ASYN], the connection type set[ASYN, SYNC]
mainproject.client.connection.type.value=ASYN
mainproject.client.connection.type.item_view_type=set
mainproject.client.connection.type.set=ASYN, SYNC
mainproject.client.connection.timeout.desc=연결 타임아웃, 단위 ms, default value[5000], min[1000], max[2147483647]
mainproject.client.connection.timeout.value=5000
mainproject.client.connection.count.desc=연결 갯수, default value[5], min[1], max[2147483647]
mainproject.client.connection.count.value=5
mainproject.client.connection.max_count.desc=최대 연결 갯수, default value[5], min[1], max[2147483647]
mainproject.client.connection.max_count.value=5
mainproject.client.connection.pool.supportor.time_interval.desc=클라이언트 연결 폴 지원자 수행 주기, 단위 ms, 디폴트 600000, min[1000], max[2147483647]
mainproject.client.connection.pool.supportor.time_interval.value=600000
mainproject.client.connection.pool.retry_interval_time_to_get_connection.desc=연결 폴로부터 연결을 얻기 위한 재 시도 간격, 단위 nanoseconds, 디폴트 5000, min[1000], max[2147483647]
mainproject.client.connection.pool.retry_interval_time_to_get_connection.value=5000
mainproject.client.asyn.alive_time_per_wrapbuffer.desc=비동기에서 송신할 데이터가 담긴 랩 버퍼당 생존 시간, 단위 nanoseconds, 디폴트 400, min[100], max[2147483647]
mainproject.client.asyn.alive_time_per_wrapbuffer.value=400
mainproject.client.asyn.retry_interval_time_to_add_input_message.desc=비동기에서 입력 메시지 스트림 큐에 입력 메시지 스트림을 다시 추가하는 간격, 단위 nanoseconds, 디폴트 400, min[100, max[2147483647]
mainproject.client.asyn.retry_interval_time_to_add_input_message.value=400
mainproject.client.asyn.share_connection.mailbox_count.desc=비동기+공유 연결 1개당 메일함 갯수, default value[2], min[1], max[2147483647]
mainproject.client.asyn.share_connection.mailbox_count.value=2
mainproject.client.asyn.input_message_queue_capacity.desc=클라이언트 비동기용 입력 메시지 큐가 최대 수용할 수 있는 크기, default value[10], min[1], max[2147483647]
mainproject.client.asyn.input_message_queue_capacity.value=10
mainproject.client.asyn.output_message_queue_capacity.desc=클라이언트 비동기용 출력 메시지 큐가 최대 수용할 수 있는 크기, default value[10], min[1], max[2147483647]
mainproject.client.asyn.output_message_queue_capacity.value=10
mainproject.client.asyn.selector.wakeup_interval.desc=클라이언트 selector 를 깨우는 주기. 단위 ms, default value[10], min[1], max[2147483647]
mainproject.client.asyn.selector.wakeup_interval.value=10
mainproject.server.monitor.time_interval.desc=서버 모니터링 주기, 단위 ms, default value[5000], min[1000], max[2147483647]
mainproject.server.monitor.time_interval.value=5000
mainproject.server.wrap_buffer.isdirect.desc=whether server wrap buffer is direct, default value[true], the boolean set[false, true]
mainproject.server.wrap_buffer.isdirect.value=true
mainproject.server.wrap_buffer.isdirect.item_view_type=set
mainproject.server.wrap_buffer.isdirect.set=false, true
mainproject.server.wrap_buffer.max_cnt_per_message.desc=서버에서 1개 메시지당 할당 받을 수 있는 랩 버퍼 최대 갯수, default value[1000], min[1], max[2147483647]
mainproject.server.wrap_buffer.max_cnt_per_message.value=1000
mainproject.server.wrap_buffer.size.desc=서버 랩 버퍼 크기, 단위 byte, default value[4096], min[1024], max[2147483647]
mainproject.server.wrap_buffer.size.value=4096
mainproject.server.wrap_buffer.pool_size.desc=서버 랩 버퍼 폴 크기, default value[1000], min[1], max[2147483647]
mainproject.server.wrap_buffer.pool_size.value=1000
mainproject.server.max_clients.desc=서버에 접속할 수 있는 최대 클라이언트 수, default value[5], min[1], max[2147483647]
mainproject.server.max_clients.value=5
mainproject.server.input_message_queue_capacity.desc=서버 입력 메시지 큐가 최대 수용할 수 있는 크기, default value[10], min[1], max[2147483647]
mainproject.server.input_message_queue_capacity.value=10
mainproject.server.output_message_queue_capacity.desc=서버 비동기용 출력 메시지 큐가 최대 수용할 수 있는 크기, default value[10], min[1], max[2147483647]
mainproject.server.output_message_queue_capacity.value=10
subject.sub_part_name_list.value=
subject.sub_part_name_list.item_view_type=list
